// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef DRIVEBASE_H
#define DRIVEBASE_H
#include "frc/commands/Subsystem.h"
#include "frc/WPILib.h"
#include "ctre/Phoenix.h"
/**
 *
 *
 * @author ExampleAuthor
 */
class DriveBase: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	std::shared_ptr<WPI_TalonSRX> driveTrainLeftTalonSlave;
	std::shared_ptr<WPI_TalonSRX> driveTrainRightTalonSlave;
	
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<WPI_TalonSRX> driveTrainLeftTalon;
	std::shared_ptr<WPI_TalonSRX> driveTrainRightTalon;
	std::shared_ptr<frc::DifferentialDrive> driveTrain;
	std::shared_ptr<frc::AnalogGyro> gyro;
	std::shared_ptr<frc::AnalogInput> ultrasonicLeft;
	std::shared_ptr<frc::AnalogInput> ultrasonicRight;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
std::shared_ptr<PigeonIMU> piggy;
	DriveBase();
	void InitDefaultCommand() override;
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
void DriveStraight(double driveStraightSpeed);
void Halt();
void JoyDrive(double myX, double myY);
void turnToAngle(double degree);
double getCurrentAngle();

double driveBackSpeed;
double driveStraightSpeed;
double distanceToLeftObject;

double getCurrentEncoderPos();
double getInchesToObject();
void showInfo();
void resetAhrs();

};

#endif
